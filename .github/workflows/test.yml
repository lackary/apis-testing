name: Run Pytest

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 8 * * *" # Runs every day at midnight UTC+8
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      API_URL: ${{ secrets.API_URL }}
      UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
      API_PHOTOS: ${{ secrets.API_PHOTOS }}
      API_COLLECTIONS: ${{ secrets.API_COLLECTIONS }}
      API_USERS: ${{ secrets.API_USERS }}
      API_SEARCH: ${{ secrets.API_SEARCH }}
      API_PHOTOS_RANDOM: ${{ secrets.API_PHOTOS_RANDOM }}

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/latest/download/allure-2.27.0.zip
          unzip allure.zip -d .
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Set RUN_ID
        run: echo "RUN_ID=$GITHUB_RUN_ID" >> $GITHUB_ENV

      - name: 🧪 Run tests and generate reports
        run: |
          pytest -v \
            --alluredir=reports/allure/results \
            --html=reports/pytest-html/report.html \
            --self-contained-html

          allure generate reports/allure/results -o reports/allure/html --clean

      - name: 📤 Upload reports folder
        uses: actions/upload-artifact@v4
        with:
          name: reports-${{ env.RUN_ID }}
          path: reports/
          retention-days: 7
